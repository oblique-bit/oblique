{
  "ob": {
    "h": {
      "button": {
        "composite": {
          "primary": {
            "inversity_normal": {
              "enabled": {
                "button_surface": {
                  "$type": "composition",
                  "$value": {
                    "fill": "{ob.h.button.color.bg.primary.inversity_normal.enabled}",
                    "borderColor": "{ob.h.button.color.border.primary.inversity_normal.enabled}",
                    "boxShadow": "{ob.h.button.box_shadow.enabled}"
                  }
                },
                "fg_color": {
                  "$type": "composition",
                  "$value": {
                    "fill": "{ob.h.button.color.fg.primary.inversity_normal.enabled}"
                  }
                }
              },
              "hover": {
                "button_surface": {
                  "$type": "composition",
                  "$value": {
                    "fill": "{ob.h.button.color.bg.primary.inversity_normal.hover}",
                    "borderColor": "{ob.h.button.color.border.primary.inversity_normal.hover}",
                    "boxShadow": "{ob.h.button.box_shadow.hover}"
                  }
                },
                "fg_color": {
                  "$type": "composition",
                  "$value": {
                    "fill": "{ob.h.button.color.fg.primary.inversity_normal.hover}"
                  }
                }
              },
              "pressed": {
                "button_surface": {
                  "$type": "composition",
                  "$value": {
                    "fill": "{ob.h.button.color.bg.primary.inversity_normal.pressed}",
                    "borderColor": "{ob.h.button.color.border.primary.inversity_normal.pressed}",
                    "boxShadow": "{ob.h.button.box_shadow.pressed}"
                  }
                },
                "fg_color": {
                  "$type": "composition",
                  "$value": {
                    "fill": "{ob.h.button.color.fg.primary.inversity_normal.pressed}"
                  }
                }
              },
              "disabled": {
                "button_surface": {
                  "$type": "composition",
                  "$value": {
                    "fill": "{ob.h.button.color.bg.primary.inversity_normal.disabled}",
                    "borderColor": "{ob.h.button.color.border.primary.inversity_normal.disabled}",
                    "boxShadow": "{ob.h.button.box_shadow.disabled}"
                  }
                },
                "fg_color": {
                  "$type": "composition",
                  "$value": {
                    "fill": "{ob.h.button.color.fg.primary.inversity_normal.disabled}"
                  }
                }
              }
            },
            "inversity_flipped": {
              "enabled": {
                "button_surface": {
                  "$type": "composition",
                  "$value": {
                    "fill": "{ob.h.button.color.bg.primary.inversity_flipped.enabled}",
                    "borderColor": "{ob.h.button.color.border.primary.inversity_flipped.enabled}",
                    "boxShadow": "{ob.h.button.box_shadow.enabled}"
                  }
                },
                "fg_color": {
                  "$type": "composition",
                  "$value": {
                    "fill": "{ob.h.button.color.fg.primary.inversity_flipped.enabled}"
                  }
                }
              },
              "hover": {
                "button_surface": {
                  "$type": "composition",
                  "$value": {
                    "fill": "{ob.h.button.color.bg.primary.inversity_flipped.hover}",
                    "borderColor": "{ob.h.button.color.border.primary.inversity_flipped.hover}",
                    "boxShadow": "{ob.h.button.box_shadow.hover}"
                  }
                },
                "fg_color": {
                  "$type": "composition",
                  "$value": {
                    "fill": "{ob.h.button.color.fg.primary.inversity_flipped.hover}"
                  }
                }
              },
              "pressed": {
                "button_surface": {
                  "$type": "composition",
                  "$value": {
                    "fill": "{ob.h.button.color.bg.primary.inversity_flipped.pressed}",
                    "borderColor": "{ob.h.button.color.border.primary.inversity_flipped.pressed}",
                    "boxShadow": "{ob.h.button.box_shadow.pressed}"
                  }
                },
                "fg_color": {
                  "$type": "composition",
                  "$value": {
                    "fill": "{ob.h.button.color.fg.primary.inversity_flipped.pressed}"
                  }
                }
              },
              "disabled": {
                "button_surface": {
                  "$type": "composition",
                  "$value": {
                    "fill": "{ob.h.button.color.bg.primary.inversity_flipped.disabled}",
                    "borderColor": "{ob.h.button.color.border.primary.inversity_flipped.disabled}",
                    "boxShadow": "{ob.h.button.box_shadow.disabled}"
                  }
                },
                "fg_color": {
                  "$type": "composition",
                  "$value": {
                    "fill": "{ob.h.button.color.fg.primary.inversity_flipped.disabled}"
                  }
                }
              }
            }
          },
          "fg_label": {
            "$type": "typography",
            "$value": {
              "fontFamily": "{ob.s.static.font_family.body}",
              "fontWeight": "{ob.s.dynamic.font_weight.medium}",
              "lineHeight": "{ob.s.dynamic.lineHeight.xs}",
              "letterSpacing": "{ob.s.dynamic.letter_spacing_px.wide}",
              "paragraphSpacing": "{ob.s.dynamic.paragraphSpacing.xs}",
              "fontSize": "{ob.s.dynamic.fontSize.md}"
            },
            "$description": "Typography only. Simplifies maintenance with Figma and Token Studio. Basically the same references as in 02_typography.json of this component."
          },
          "secondary": {
            "inversity_normal": {
              "enabled": {
                "button_surface": {
                  "$type": "composition",
                  "$value": {
                    "fill": "{ob.h.button.color.bg.secondary.inversity_normal.enabled}",
                    "borderColor": "{ob.h.button.color.border.secondary.inversity_normal.enabled}",
                    "boxShadow": "{ob.h.button.box_shadow.enabled}"
                  }
                },
                "fg_color": {
                  "$type": "composition",
                  "$value": {
                    "fill": "{ob.h.button.color.fg.secondary.inversity_normal.enabled}"
                  }
                }
              },
              "hover": {
                "button_surface": {
                  "$type": "composition",
                  "$value": {
                    "fill": "{ob.h.button.color.bg.secondary.inversity_normal.hover}",
                    "borderColor": "{ob.h.button.color.border.secondary.inversity_normal.hover}",
                    "boxShadow": "{ob.h.button.box_shadow.hover}"
                  }
                },
                "fg_color": {
                  "$type": "composition",
                  "$value": {
                    "fill": "{ob.h.button.color.fg.secondary.inversity_normal.hover}"
                  }
                }
              },
              "pressed": {
                "button_surface": {
                  "$type": "composition",
                  "$value": {
                    "fill": "{ob.h.button.color.bg.secondary.inversity_normal.pressed}",
                    "borderColor": "{ob.h.button.color.border.secondary.inversity_normal.pressed}",
                    "boxShadow": "{ob.h.button.box_shadow.pressed}"
                  }
                },
                "fg_color": {
                  "$type": "composition",
                  "$value": {
                    "fill": "{ob.h.button.color.fg.secondary.inversity_normal.pressed}"
                  }
                }
              },
              "disabled": {
                "button_surface": {
                  "$type": "composition",
                  "$value": {
                    "fill": "{ob.h.button.color.bg.secondary.inversity_normal.disabled}",
                    "borderColor": "{ob.h.button.color.border.secondary.inversity_normal.disabled}",
                    "boxShadow": "{ob.h.button.box_shadow.disabled}"
                  }
                },
                "fg_color": {
                  "$type": "composition",
                  "$value": {
                    "fill": "{ob.h.button.color.fg.secondary.inversity_normal.disabled}"
                  }
                }
              }
            },
            "inversity_flipped": {
              "enabled": {
                "button_surface": {
                  "$type": "composition",
                  "$value": {
                    "fill": "{ob.h.button.color.bg.secondary.inversity_flipped.enabled}",
                    "borderColor": "{ob.h.button.color.border.secondary.inversity_flipped.enabled}",
                    "boxShadow": "{ob.h.button.box_shadow.enabled}"
                  }
                },
                "fg_color": {
                  "$type": "composition",
                  "$value": {
                    "fill": "{ob.h.button.color.fg.secondary.inversity_flipped.enabled}"
                  }
                }
              },
              "hover": {
                "button_surface": {
                  "$type": "composition",
                  "$value": {
                    "fill": "{ob.h.button.color.bg.secondary.inversity_flipped.hover}",
                    "borderColor": "{ob.h.button.color.border.secondary.inversity_flipped.hover}",
                    "boxShadow": "{ob.h.button.box_shadow.hover}"
                  }
                },
                "fg_color": {
                  "$type": "composition",
                  "$value": {
                    "fill": "{ob.h.button.color.fg.secondary.inversity_flipped.hover}"
                  }
                }
              },
              "pressed": {
                "button_surface": {
                  "$type": "composition",
                  "$value": {
                    "fill": "{ob.h.button.color.bg.secondary.inversity_flipped.pressed}",
                    "borderColor": "{ob.h.button.color.border.secondary.inversity_flipped.pressed}",
                    "boxShadow": "{ob.h.button.box_shadow.pressed}"
                  }
                },
                "fg_color": {
                  "$type": "composition",
                  "$value": {
                    "fill": "{ob.h.button.color.fg.secondary.inversity_flipped.pressed}"
                  }
                }
              },
              "disabled": {
                "button_surface": {
                  "$type": "composition",
                  "$value": {
                    "fill": "{ob.h.button.color.bg.secondary.inversity_flipped.disabled}",
                    "borderColor": "{ob.h.button.color.border.secondary.inversity_flipped.disabled}",
                    "boxShadow": "{ob.h.button.box_shadow.disabled}"
                  }
                },
                "fg_color": {
                  "$type": "composition",
                  "$value": {
                    "fill": "{ob.h.button.color.fg.secondary.inversity_flipped.disabled}"
                  }
                }
              }
            }
          },
          "tertiary": {
            "inversity_normal": {
              "enabled": {
                "button_surface": {
                  "$type": "composition",
                  "$value": {
                    "fill": "{ob.h.button.color.bg.tertiary.inversity_normal.enabled}",
                    "borderColor": "{ob.h.button.color.border.tertiary.inversity_normal.enabled}",
                    "boxShadow": "{ob.h.button.box_shadow.enabled}"
                  }
                },
                "fg_color": {
                  "$type": "composition",
                  "$value": {
                    "fill": "{ob.h.button.color.fg.tertiary.inversity_normal.enabled}"
                  }
                }
              },
              "hover": {
                "button_surface": {
                  "$type": "composition",
                  "$value": {
                    "fill": "{ob.h.button.color.bg.tertiary.inversity_normal.hover}",
                    "borderColor": "{ob.h.button.color.border.tertiary.inversity_normal.hover}",
                    "boxShadow": "{ob.h.button.box_shadow.hover}"
                  }
                },
                "fg_color": {
                  "$type": "composition",
                  "$value": {
                    "fill": "{ob.h.button.color.fg.tertiary.inversity_normal.hover}"
                  }
                }
              },
              "pressed": {
                "button_surface": {
                  "$type": "composition",
                  "$value": {
                    "fill": "{ob.h.button.color.bg.tertiary.inversity_normal.pressed}",
                    "borderColor": "{ob.h.button.color.border.tertiary.inversity_normal.pressed}",
                    "boxShadow": "{ob.h.button.box_shadow.pressed}"
                  }
                },
                "fg_color": {
                  "$type": "composition",
                  "$value": {
                    "fill": "{ob.h.button.color.fg.tertiary.inversity_normal.pressed}"
                  }
                }
              },
              "disabled": {
                "button_surface": {
                  "$type": "composition",
                  "$value": {
                    "fill": "{ob.h.button.color.bg.tertiary.inversity_normal.disabled}",
                    "borderColor": "{ob.h.button.color.border.tertiary.inversity_normal.disabled}",
                    "boxShadow": "{ob.h.button.box_shadow.disabled}"
                  }
                },
                "fg_color": {
                  "$type": "composition",
                  "$value": {
                    "fill": "{ob.h.button.color.fg.tertiary.inversity_normal.disabled}"
                  }
                }
              }
            },
            "inversity_flipped": {
              "enabled": {
                "button_surface": {
                  "$type": "composition",
                  "$value": {
                    "fill": "{ob.h.button.color.bg.tertiary.inversity_flipped.enabled}",
                    "borderColor": "{ob.h.button.color.border.tertiary.inversity_flipped.enabled}",
                    "boxShadow": "{ob.h.button.box_shadow.enabled}"
                  }
                },
                "fg_color": {
                  "$type": "composition",
                  "$value": {
                    "fill": "{ob.h.button.color.fg.tertiary.inversity_flipped.enabled}"
                  }
                }
              },
              "hover": {
                "button_surface": {
                  "$type": "composition",
                  "$value": {
                    "fill": "{ob.h.button.color.bg.tertiary.inversity_flipped.hover}",
                    "borderColor": "{ob.h.button.color.border.tertiary.inversity_flipped.hover}",
                    "boxShadow": "{ob.h.button.box_shadow.hover}"
                  }
                },
                "fg_color": {
                  "$type": "composition",
                  "$value": {
                    "fill": "{ob.h.button.color.fg.tertiary.inversity_flipped.hover}"
                  }
                }
              },
              "pressed": {
                "button_surface": {
                  "$type": "composition",
                  "$value": {
                    "fill": "{ob.h.button.color.bg.tertiary.inversity_flipped.pressed}",
                    "borderColor": "{ob.h.button.color.border.tertiary.inversity_flipped.pressed}",
                    "boxShadow": "{ob.h.button.box_shadow.pressed}"
                  }
                },
                "fg_color": {
                  "$type": "composition",
                  "$value": {
                    "fill": "{ob.h.button.color.fg.tertiary.inversity_flipped.pressed}"
                  }
                }
              },
              "disabled": {
                "button_surface": {
                  "$type": "composition",
                  "$value": {
                    "fill": "{ob.h.button.color.bg.tertiary.inversity_flipped.disabled}",
                    "borderColor": "{ob.h.button.color.border.tertiary.inversity_flipped.disabled}",
                    "boxShadow": "{ob.h.button.box_shadow.disabled}"
                  }
                },
                "fg_color": {
                  "$type": "composition",
                  "$value": {
                    "fill": "{ob.h.button.color.fg.tertiary.inversity_flipped.disabled}"
                  }
                }
              }
            }
          }
        },
        "label_icon": {
          "focus_ring": {
            "border_radius": {
              "$type": "borderRadius",
              "$value": "{ob.s.border_radius.md}",
              "$description": "Requires larger radius than element itself."
            },
            "outline_offset": {
              "$type": "dimension",
              "$value": "{ob.s.outline_offset.md}",
              "$description": "Medium outline offset for button label_icon variant to ensure focus ring visibility around button boundary."
            }
          }
        },
        "icon_only": {
          "focus_ring": {
            "border_radius": {
              "$type": "borderRadius",
              "$value": "{ob.s.border_radius.rounded}",
              "$description": "Requires larger radius than element itself."
            },
            "outline_offset": {
              "$type": "dimension",
              "$value": "{ob.s.outline_offset.md}",
              "$description": "Medium outline offset for button icon_only variant to ensure focus ring visibility around circular button boundary."
            }
          }
        }
      }
    }
  }
}