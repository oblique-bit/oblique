@use "sass:selector";
@use "../../styles/scss/core/variables";
@use "../../styles/scss/core/mixins/layout";
@use "../../styles/scss/core/mixins/column-layout";
@use "../../styles/scss/core/mixins/shadow";

.ob-column-layout {
	display: flex;
	flex-direction: column;
	// do not remove. See OUI-2509 for information.
	overflow: hidden; // cannot set overflow-x as it will add a vertical scrollbar

	.ob-column-toggle-left,
	.ob-column-toggle-right {
		display: none;
	}

	.ob-column-left,
	.ob-column-right {
		order: 1;
	}

	@include layout.ob-media-breakpoint-up(sm) {
		flex-flow: row wrap;

		.ob-column-main,
		.ob-column-left,
		.ob-column-right {
			flex-grow: 1;
		}

		.ob-master-layout.ob-has-layout &:not(.ob-no-layout) {
			> .ob-column-left,
			> .ob-column-main:not(:last-child) {
				> .ob-column-content {
					padding-right: variables.$ob-spacing-default;
				}
			}

			> .ob-column-right,
			> .ob-column-main:not(:first-child) {
				> .ob-column-content {
					padding-left: variables.$ob-spacing-default;
				}
			}
		}

		.ob-master-layout:not(.ob-has-layout) &:not(.ob-no-layout) {
			> .ob-column-left,
			> .ob-column-right,
			> .ob-column-main {
				> .ob-column-content {
					padding-right: variables.$ob-spacing-default;
					padding-left: variables.$ob-spacing-default;
				}
			}
		}

		.ob-column-main {
			flex: 1 1 100%;
		}

		.ob-column-content {
			height: 100%;
		}
	}

	@include layout.ob-media-breakpoint-up(md) {
		min-height: variables.$ob-column-layout-toggle-height;
		flex-wrap: nowrap;

		.ob-column-toggle-left,
		.ob-column-toggle-right {
			display: flex;
			position: absolute;
			z-index: variables.$ob-z-index-controls;
			top: 50%;
			margin-top: -(variables.$ob-column-layout-toggle-height) * 0.5;
			width: variables.$ob-column-layout-toggle-width;
			height: variables.$ob-column-layout-toggle-height;
			font-size: 17px;
			text-align: center;
			padding: 0;
			border: 1px solid variables.$ob-gray-lighter;
			background-color: variables.$ob-white;
			transition: all variables.$ob-duration-default;
			color: variables.$ob-default;
			align-items: center;
			justify-content: center;

			&:hover,
			&:focus {
				transform: scale(1.25);
				cursor: pointer;
			}

			.mat-icon {
				display: block;
			}
		}

		.ob-column-toggle-left {
			transform-origin: 100% 50%;
			right: 0;
			margin-left: -(variables.$ob-column-layout-toggle-width);
			border-radius: variables.$ob-column-layout-toggle-radius 0 0
				variables.$ob-column-layout-toggle-radius;
			border-right-width: 0;
			@include shadow.ob-drop-shadow(down-left);
		}

		.ob-column-toggle-right {
			transform-origin: 0 50%;
			left: 0;
			margin-right: -(variables.$ob-column-layout-toggle-width);
			border-radius: 0 variables.$ob-column-layout-toggle-radius
				variables.$ob-column-layout-toggle-radius 0;
			border-left-width: 0;
			@include shadow.ob-drop-shadow();
		}

		.ob-column-main {
			position: relative;
		}

		.ob-column-left,
		.ob-column-right {
			position: relative;
			flex: 0 0 variables.$ob-column-width;
			order: 0;
			max-width: variables.$ob-column-width; // Ensure columns keep shrinking even if text content may overflow.

			@at-root #{selector.append(".ob-wider-columns", &)} {
				flex-basis: 2 * variables.$ob-column-width;
				max-width: 2 * variables.$ob-column-width;
			}
		}

		.ob-column-left {
			transition: margin-left variables.$ob-duration-default;

			&.ob-collapsed {
				margin-left: -(variables.$ob-column-width);

				@at-root #{selector.append(".ob-wider-columns", &)} {
					margin-left: -2 * variables.$ob-column-width;
				}

				.ob-column-toggle-left {
					transform-origin: 0 50%;
					margin-left: 0;
					margin-right: -(variables.$ob-column-layout-toggle-width);
					border-radius: 0 variables.$ob-column-layout-toggle-radius
						variables.$ob-column-layout-toggle-radius 0;
					border-right-width: 1px;
					border-left-width: 0;
					@include shadow.ob-drop-shadow();
				}
			}

			&::after {
				@include column-layout.ob-column-separator() {
					right: 0;
				}
			}
		}

		.ob-column-right {
			transition: margin-right variables.$ob-duration-default;

			&.ob-collapsed {
				margin-right: -(variables.$ob-column-width);

				@at-root #{selector.append(".ob-wider-columns", &)} {
					margin-right: -2 * variables.$ob-column-width;
				}

				.ob-column-toggle-right {
					transform-origin: 100% 50%;
					margin-right: 0;
					margin-left: -(variables.$ob-column-layout-toggle-width);
					border-radius: variables.$ob-column-layout-toggle-radius 0 0
						variables.$ob-column-layout-toggle-radius;
					border-right-width: 0;
					border-left-width: 1px;
					@include shadow.ob-drop-shadow(down-left);
				}
			}

			&::before {
				@include column-layout.ob-column-separator() {
					left: 0;
				}
			}
		}
	}

	@include layout.ob-media-breakpoint-up(md) {
		.ob-fixed-layout &.ob-full-height {
			height: 100%;

			.ob-column-content {
				overflow: hidden auto;
			}
		}
	}
}
