@use "../../../styles/scss/core/variables";
@use "../../../styles/scss/core/mixins/layout";
@use "../../../styles/scss/core/mixins/nav";
@use "../../../styles/scss/core/mixins/button";
@use "../../../styles/scss/core/mixins/shadow";

.ob-master-layout-navigation {
	border-top: 1px solid variables.$ob-gray-200;

	&:not(:has(.ob-has-opened-menu)) {
		border-bottom: 1px solid variables.$ob-gray-200;
	}
	flex-grow: 1;

	@include layout.ob-media-breakpoint-down(md) {
		border-top: none;
		display: none;

		.ob-header-expanded & {
			display: block;
		}

		> nav {
			height: 100%;
			overflow: hidden; // hides horizontal scrollbar in fixed mode
		}
	}

	.ob-master-layout.ob-no-navigation & {
		display: none;
	}

	.ob-main-nav {
		position: relative;
		display: flex;
		flex-flow: column nowrap;
		height: 100%;
		margin: 0;
		padding: 0;
		list-style: none;
		background-color: variables.$ob-white;

		@include layout.ob-media-breakpoint-up(md) {
			.ob-master-layout:not(.ob-fixed-layout, .ob-continuous-layout) &:not(.ob-has-opened-menu) {
				overflow: hidden; // prevents horizontal scrollbar with sticky footer and non sticky header
			}
		}

		&:not(.ob-sub-nav) {
			@include layout.ob-media-breakpoint-up(md) {
				flex-direction: row;
			}
		}

		button {
			@include button.ob-link-btn();
		}

		@include layout.ob-media-breakpoint-down(md) {
			.ob-main-nav-item {
				& > a,
				& > button {
					&.active,
					&:hover {
						border-left: variables.$ob-line-width solid variables.$ob-accent;
						padding-left: variables.$ob-spacing-default - variables.$ob-line-width;
					}
				}
			}

			&.ob-has-opened-menu {
				.ob-master-layout-navigation-item.ob-main-nav-item {
					&:not(.ob-expanded),
					.ob-master-layout-navigation-toggle {
						display: none;
					}
				}
			}
		}

		.ob-sub-menu {
			visibility: hidden; // Do not use `display: none` to avoid reflow & transition issues!
			position: absolute;
			top: 0;
			bottom: 0;
			left: 0;
			right: 0;
			height: auto;
			margin: 0;
			font-size: variables.$ob-font-size-smaller;
			overflow-y: auto; // limits the height
			z-index: variables.$ob-z-index-controls;
			transform: translateX(105%);
			transition: visibility variables.$ob-duration-default,
				transform variables.$ob-duration-default;

			@include layout.ob-media-breakpoint-up(md) {
				padding: 0 variables.$ob-spacing-xxl variables.$ob-spacing-xxl;
				top: 100%;
				bottom: auto;
				left: auto;
				right: auto;
				min-width: 30ch; // empiric number
				max-height: 60vh;
				background-color: variables.$ob-white;
				transform: none;
				transition: none;
				display: block;
			}

			@include layout.ob-media-breakpoint-down(md) {
				> ul > li:last-child {
					// [iOS only] Simulate a bottom spacing to ensure that last item is reachable when scrolling the menu and does not display under the MobileSafari tools menu:
					margin-bottom: 70px;
				}
			}

			@mixin sub-menu-active-hover-border-left() {
				border-left: variables.$ob-line-width solid variables.$ob-accent;
			}

			li {
				a,
				button {
					&.active,
					&:hover {
						@include sub-menu-active-hover-border-left();
						padding-left: variables.$ob-spacing-default - variables.$ob-line-width;
					}
				}
			}

			.ob-sub-menu-parent-link {
				a {
					font-size: variables.$ob-font-size-big;
					font-weight: bold;
					padding-left: variables.$ob-line-width;

					&:hover {
						@include sub-menu-active-hover-border-left();
						padding-left: 0;
					}
				}

				&.is-exact-match {
					a {
						&.active {
							@include sub-menu-active-hover-border-left();
							padding-left: 0;
						}
					}
				}
			}

			.ob-sub-menu-back-close-container {
				display: flex;
				justify-content: space-between;

				@include layout.ob-media-breakpoint-up(md) {
					margin: variables.$ob-spacing-default 0;

					&.just-close {
						justify-content: flex-end;
					}
				}

				.ob-sub-menu-back-button-home-icon {
					margin-bottom: -0.5 * variables.$ob-spacing-xs;
				}

				.ob-sub-menu-close-button {
					margin-top: shadow.$tab-focus-width;
					flex-direction: row-reverse;

					@include layout.ob-media-breakpoint-down(md) {
						display: none;
					}

					&.mat-mdc-button > .mat-icon {
						margin-left: variables.$ob-spacing-xs;
						margin-right: 0;
						font-size: variables.$ob-font-size-base;
						height: variables.$ob-font-size-base;
						width: variables.$ob-font-size-base;
					}
				}

				button {
					width: fit-content;
				}
			}

			.ob-sub-menu-go-to-children-button {
				align-self: flex-end;
				margin-left: -0.25 * variables.$ob-spacing-xs;

				&.ob-button {
					height: 39px;
					width: 39px;
					padding-left: calc(0.3896em + variables.$ob-spacing-xs * 0.5);
					padding-top: calc(0.3896em + variables.$ob-spacing-xs * 0.5);

					&:hover {
						padding-left: calc(0.3896em - variables.$ob-spacing-xs * 0.75);
					}
				}
			}
		}

		a,
		button {
			display: flex;
			width: 100%;
			line-height: variables.$ob-line-height;
			margin: 0;
			padding: variables.$ob-spacing-sm variables.$ob-spacing-default;
			color: variables.$ob-default;
			text-decoration: none;
			cursor: pointer;

			@include nav.ob-nav-hover(-1);

			@include layout.ob-media-breakpoint-up(md) {
				padding: variables.$ob-spacing-sm variables.$ob-spacing-default;

				&.hide-md-up {
					display: none;
				}

				&.active,
				&:active,
				&:hover,
				&:focus {
					&::after {
						top: 0;
						bottom: 0;
					}
				}
			}

			&:not(.ob-sub-menu-close-button, .ob-sub-menu-back-button) {
				border-bottom: 1px solid variables.$ob-gray-light;
			}
		}

		// First level only:
		> .ob-main-nav-item {
			@include layout.ob-media-breakpoint-up(md) {
				> a,
				> button {
					border-bottom: 3px solid transparent;
					display: inline-flex;
					padding: variables.$ob-spacing-default;
					white-space: nowrap;
					font-size: variables.$ob-font-size-normal;

					&.active {
						background-color: variables.$ob-white;

						&:hover {
							background-color: variables.$ob-secondary-50;
						}

						&:active {
							background-color: variables.$ob-secondary-100;
						}
					}

					&.active,
					&:hover {
						border-bottom: 3px solid variables.$ob-red-500;
					}

					&::after {
						display: none; // do not show red border on main nav 1st level
					}
				}
			}

			> a,
			> button {
				&:active {
					background-color: variables.$ob-secondary-100;
				}
			}
		}

		.ob-nav-toggle {
			margin-left: auto;
			display: flex;
		}

		@include layout.ob-media-breakpoint-down(md) {
			.ob-toggle-collapsed,
			.ob-toggle-expanded {
				display: none;
			}
		}

		@include layout.ob-media-breakpoint-up(md) {
			.ob-toggle-layout-collapsed,
			.ob-master-layout-navigation-toggle[aria-expanded] .ob-toggle-collapsed,
			.ob-master-layout-navigation-toggle:not([aria-expanded]) .ob-toggle-expanded {
				display: none;
			}
		}

		@include layout.ob-media-breakpoint-up(md) {
			&.ob-main-nav-fw .ob-sub-menu {
				left: 0;
				right: 0;

				.ob-sub-nav {
					display: block;
					column-width: 30ch; // empiric value

					li {
						break-inside: avoid-column;
					}
				}
			}
		}

		& .ob-expanded > .ob-sub-menu {
			visibility: visible;

			@include layout.ob-media-breakpoint-down(md) {
				transform: translateX(0%);
			}
		}

		& > li.ob-main-nav-item {
			& > a,
			& > button {
				&.ob-master-layout-navigation-link.cdk-keyboard-focused {
					outline: none;
					box-shadow: none;
					@include layout.ob-media-breakpoint-up(md) {
						padding: variables.$ob-spacing-default - shadow.$tab-focus-width;
					}
					@include layout.ob-media-breakpoint-down(md) {
						padding: (variables.$ob-spacing-sm - shadow.$tab-focus-width)
							(variables.$ob-spacing-default - shadow.$tab-focus-width);
					}
				}
			}

			&.ob-expanded {
				& > a.ob-master-layout-navigation-link.cdk-keyboard-focused,
				& > button.ob-master-layout-navigation-link.cdk-keyboard-focused {
					& ~ .ob-sub-menu {
						@include layout.ob-media-breakpoint-up(md) {
							margin-left: -(shadow.$tab-focus-width);
						}
					}
				}
			}
		}

		@mixin nav-li-tab-focus-border() {
			& > li {
				&:has(
						> a.ob-master-layout-navigation-link.cdk-keyboard-focused,
						> button.ob-master-layout-navigation-link.cdk-keyboard-focused
					) {
					@include shadow.ob-tab-focus-border();
				}
			}
		}

		@include nav-li-tab-focus-border();

		.ob-sub-nav {
			@include nav-li-tab-focus-border();
			@include layout.ob-media-breakpoint-up(md) {
				background-color: variables.$ob-white;
			}

			& > li {
				& > a,
				& > button {
					&.ob-master-layout-navigation-link.cdk-keyboard-focused {
						padding: (variables.$ob-spacing-sm - shadow.$tab-focus-width)
							(variables.$ob-spacing-default - shadow.$tab-focus-width);
						outline: none;
						box-shadow: none;
					}
				}
			}
		}
	}

	.ob-master-layout-navigation-link {
		gap: variables.$ob-spacing-sm;
		align-items: center;

		&.ob-external-link .mat-icon {
			margin-left: auto;
		}
	}

	.ob-external-link span.mat-icon,
	.ob-icon-wrapper {
		font-size: variables.$ob-font-size-bigger;
		line-height: 1.1; // empiric value to have an height of 24px.
	}
}
