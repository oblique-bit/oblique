@use "sass:selector";
@use "sass:map";
@use "../../../styles/scss/core/variables";
@use "../../../styles/scss/core/mixins/layout";
@use "../../../styles/scss/core/mixins/shadow";

.ob-master-layout {
	*:not(input) {
		@include shadow.ob-focus-visible-tab-focus-box-shadow();
	}

	a:focus-visible {
		border-radius: 3px;
	}

	.ob-viewport {
		background-color: variables.$ob-gray-50;
		display: flex;
		flex-direction: column;
		width: 100%;

		&.ob-continuous-layout {
			min-height: 100vh;
		}

		&:not(.ob-continuous-layout) {
			height: 100vh;

			&:not(.ob-fixed-layout) {
				overflow-x: hidden; // prevents horizontal scrollbar when a sub-meu would open outside of the viewable area
			}
		}

		&.ob-fixed-layout .ob-master-layout-wrapper {
			overflow: hidden; // shows scrollbars as necessary in fixed layout
		}

		&:not(.ob-continuous-layout, .ob-fixed-layout) .ob-master-layout-wrapper {
			overflow: auto; // shows scrollbars as necessary in non fixed layout
		}
	}

	.ob-master-layout-wrapper {
		display: flex;
		flex-direction: column;
		flex: 1 1 auto;
	}

	.ob-master-layout-header:has(ul.ob-has-opened-menu) ~ .ob-master-layout-wrapper {
		backdrop-filter: brightness(0.5);
		filter: brightness(0.5);
	}

	.ob-main-layout {
		position: relative; // to prevent a double scrollbar with an ob-screen-reader-only out of the visible area
		flex: 1 1 auto;

		@at-root #{selector.append(".ob-has-layout", &)} {
			padding: variables.$ob-spacing-default;

			@include layout.ob-media-breakpoint-up(md) {
				padding: variables.$ob-spacing-default variables.$ob-spacing-lg;
			}
		}
	}

	.ob-viewport.ob-fixed-layout .ob-main-layout {
		overflow-y: auto; // shows scrollbars as necessary in fixed layout
	}

	@include layout.ob-media-breakpoint-down(md) {
		&.ob-header-expanded {
			.ob-main-layout,
			.ob-master-layout-footer {
				display: none;
			}

			.ob-viewport.ob-fixed-layout .ob-master-layout-wrapper {
				overflow: visible;
			}
		}

		&:not(.ob-header-expanded) {
			.ob-master-layout-header-title {
				border-bottom: 1px solid variables.$ob-gray-200;
			}
		}
	}

	&.ob-has-max-width .ob-main-layout {
		display: flex;
		justify-content: center;

		> * {
			max-width: map.get(variables.$ob-grid-breakpoints, xl);
		}
	}

	button {
		&:focus {
			outline: none;
		}
	}

	&.ob-header-expanded {
		.ob-master-layout-header-toggle {
			&:focus-visible {
				.first-line,
				.second-line,
				.third-line {
					margin-right: 4px;
				}
			}
		}
	}
}
